{"version":3,"sources":["Routes/Error.js","api/FetchRoom.js","api/useInterval.js","components/ResultBlock.js","components/LoadingBar.js","components/Room.js","Routes/Gameroom.js","Routes/Home.js","App.js","index.js"],"names":["Error","props","className","style","backgroundImage","msg","FetchRoom","url","useState","connected","setConnection","fetch","then","res","ok","console","log","catch","e","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","ResultBlock","winner","LoadingBar","class","Room","disabled","setDisabled","isRunning","setIsRunning","setWinner","inputs","setInputs","req","method","headers","body","JSON","stringify","roomID","text","data","handleInput","prevState","target","name","value","solo","window","location","href","type","restaurantOne","onChange","autocomplete","restaurantTwo","restaurantThree","restaurantFour","onClick","preventDefault","total","Object","values","randNum","Math","floor","random","length","restaurants","Gameroom","useSearchParams","get","Home","size","setSize","navigate","useNavigate","onSubmit","Number","formData","FormData","append","PostData","a","alert","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f47a3b.chunk.js","sourcesContent":["const Error = (props) => {\n  return (\n    <div\n      className=\"hero min-h-screen\"\n      style={{\n        backgroundImage: \"url('More_Transparent.png')\",\n      }}\n    >\n      <div className=\"hero-overlay bg-opacity-70 bg-yellow-700\"></div>\n      <div className=\"text-center hero-content text-neutral-content\">\n        <div className=\"max-w-2xl\">\n          <h1 className=\"mb-5 text-9xl font-bold\">{props.msg}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import { useState } from \"react\";\n\nconst FetchRoom = (url) => {\n  const [connected, setConnection] = useState(true);\n\n  fetch(url)\n    .then((res) => {\n      if (!res.ok) {\n        throw Error(\"Could not check if is connected\");\n      }\n      console.log(\"0909\");\n      // setConnection(true);\n    })\n    .catch((e) => {\n      setConnection(false);\n      console.log(\"There was a error\");\n    });\n\n  return { connected };\n};\nexport default FetchRoom;\n","import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\nexport default useInterval;\n","const ResultBlock = (props) => {\n  return (\n    <h1 className=\"text-center text-4xl mt-5 font-bold\">\n      Winner: {props.winner}\n    </h1>\n  );\n};\n\nexport default ResultBlock;\n","const LoadingBar = () => {\n  return (\n    <>\n      <div class=\" mt-5 flex justify-center items-center\">\n        <div class=\"animate-spin rounded-full h-32 w-32 border-b-2 border-red-800\"></div>\n      </div>\n      <h1 className=\"text-center text-2xl mt-5 font-bold \">\n        Waiting for other users\n      </h1>\n    </>\n  );\n};\nexport default LoadingBar;\n","import { useState } from \"react\";\n\nimport useInterval from \"../api/useInterval\";\nimport ResultBlock from \"./ResultBlock\";\nimport LoadingBar from \"./LoadingBar\";\n\nconst Room = (props) => {\n  const [disabled, setDisabled] = useState(false);\n  // const [randRestaurants, setrRandRestaurants] = useState([\n  //   \"aaa\",\n  //   \"bbb\",\n  //   \"ccc\",\n  //   \"ddd\",\n  //   \"eee\",\n  // ]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [inputs, setInputs] = useState({});\n\n  useInterval(\n    () => {\n      const req = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ roomID: props.roomID }),\n      };\n      fetch(\"api/getResults\", req)\n        .then((res) => {\n          if (res.ok) {\n            return res.text();\n          }\n          throw new Error(\"NOT fully submited yet\");\n        })\n        .then((data) => {\n          setWinner(data);\n          setIsRunning(!isRunning);\n        })\n        .catch((e) => console.log(e));\n    },\n    isRunning ? 3000 : null\n  );\n\n  const handleSubmit = (e) => {\n    // Do some input validation\n    e.preventDefault();\n\n    setDisabled(!disabled);\n    const total = Object.values(inputs);\n\n    if (props.solo) {\n      const randNum = Math.floor(Math.random() * total.length);\n      setWinner(total[randNum]);\n    } else {\n      const req = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ roomID: props.roomID, restaurants: total }),\n      };\n\n      fetch(\"api/setResults\", req)\n        .then((res) => {\n          if (res.ok) {\n            return res.text();\n          }\n          throw new Error(\"NOT good response status\");\n        })\n        .then((data) => console.log(data))\n        .catch((e) => console.log(e));\n\n      setIsRunning(!isRunning);\n    }\n  };\n\n  const handleInput = (e) =>\n    setInputs((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n\n  // const handleRandomChoice = (e) =>\n  //   setInputs((prevState) => ({\n  //     ...prevState,\n  //     [e.target.name]:\n  //       randRestaurants[Math.floor(Math.random() * randRestaurants.length)],\n  //   }));\n\n  function isOneUser() {\n    return (\n      <>\n        <h1 className=\"text-gray-50 mb-5 text-5xl font-bold bg-red-800 p-4 rounded-lg\">\n          {props.solo ? \"Where Are You Going To Eat?\" : window.location.href}\n        </h1>\n        {!props.solo && (\n          <p className=\"text-gray-50 mb-5 text-3xl bg-red-800\t p-4 rounded-lg\">\n            <div className=\"inline font-bold\">COPY</div> the url.\n            <div className=\"inline font-bold\"> SHARE</div> with friends.\n            <div className=\"inline  font-bold\"> SUBMIT</div> restaurants.\n            <div className=\"inline font-bold\"> GET</div> result.\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div\n        className=\"hero min-h-screen\"\n        style={{\n          backgroundImage: \"url('More_Transparent.png')\",\n        }}\n      >\n        <div className=\"hero-overlay bg-opacity-70 bg-yellow-700\"></div>\n        <div className=\"flex-col justify-center hero-content lg:flex-row \">\n          <div className=\"text-center lg:text-left \">{isOneUser()}</div>\n          <div className=\"card flex-shrink-0 w-full max-w-md shadow-2xl bg-base-100\">\n            <div className=\"card-body\">\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Restaurant / Food One</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"restaurantOne\"\n                  value={inputs.restaurantOne || \"\"}\n                  onChange={handleInput}\n                  autocomplete=\"off\"\n                  disabled={disabled}\n                  className=\"input input-bordered\"\n                />\n              </div>\n              <div className=\"form-control\">\n                <label className=\"label\">\n                  <span className=\"label-text\">Restaurant / Food Two</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"restaurantTwo\"\n                  value={inputs.restaurantTwo || \"\"}\n                  onChange={handleInput}\n                  autocomplete=\"off\"\n                  disabled={disabled}\n                  className=\"input input-bordered\"\n                />\n\n                <label className=\"label\">\n                  <span className=\"label-text\">Restaurant / Food Three</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"restaurantThree\"\n                  value={inputs.restaurantThree || \"\"}\n                  onChange={handleInput}\n                  autocomplete=\"off\"\n                  disabled={disabled}\n                  className=\"input input-bordered\"\n                />\n                <label className=\"label\">\n                  <span className=\"label-text\">Restaurant / Food Four</span>\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"restaurantFour\"\n                  value={inputs.restaurantFour || \"\"}\n                  onChange={handleInput}\n                  autocomplete=\"off\"\n                  disabled={disabled}\n                  className=\"input input-bordered\"\n                />\n              </div>\n              <div className=\"form-control mt-6\">\n                <input\n                  type=\"button\"\n                  onClick={handleSubmit}\n                  value=\"Submit\"\n                  className=\"btn btn-lg\"\n                  disabled={disabled}\n                />\n              </div>\n              {isRunning && <LoadingBar />}\n              {winner && <ResultBlock winner={winner} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Room;\n","import { useSearchParams } from \"react-router-dom\";\nimport Error from \"./Error\";\nimport FetchRoom from \"../api/FetchRoom\";\nimport Room from \"../components/Room\";\n\nconst Gameroom = () => {\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get(\"id\");\n\n  if (id === \"0000\") return <Room solo />;\n\n  const { connected } = FetchRoom(\"api/room?id=\" + id);\n\n  if (connected) return <Room roomID={id} />;\n  return <Error msg=\"URL not vaild\" />;\n};\nexport default Gameroom;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst Home = () => {\n  const [size, setSize] = useState(\"How Many Users?\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (size === \"How Many Users?\") {\n      alert(\"Choose correct size\");\n      return;\n    }\n    if (Number(size) === 1) navigate(\"/room?id=0000\");\n    else {\n      const formData = new FormData();\n      formData.append(\"size\", size);\n\n      const PostData = async () => {\n        try {\n          const res = await fetch(\"api/generate-url\", {\n            method: \"POST\",\n            body: formData,\n          });\n          if (!res.ok) {\n            throw new Error(\"Bad INPUT\");\n          }\n          const url = await res.text();\n          console.log(url);\n          navigate(\"/room?id=\" + url);\n        } catch (e) {\n          console.log(\"Error is \" + e);\n        }\n      };\n      PostData();\n    }\n  };\n  return (\n    <div\n      className=\"hero min-h-screen\"\n      style={{\n        backgroundImage: \"url('More_Transparent.png')\",\n      }}\n    >\n      <div className=\"hero-overlay bg-opacity-70 bg-yellow-700\"></div>\n      <div className=\"text-center hero-content text-neutral-content\">\n        <div className=\"max-w-lg\">\n          <h1 className=\"mb-5 text-7xl font-bold\">\n            Can't Decide Where to Eat?\n          </h1>\n          <p className=\"mb-5 text-2xl\">\n            Take the hassle away of choosing on what or where to eat with this\n            collaborative web app.\n          </p>\n          <div className=\"flex justify-evenly\">\n            <form onSubmit={handleSubmit}>\n              <select\n                value={size}\n                className=\"text-black select select-bordered select-lg w-full max-w-xs\"\n                onChange={(e) => {\n                  setSize(e.target.value);\n                }}\n              >\n                <option value=\"How Many Users?\" disabled>\n                  How Many Users?\n                </option>\n\n                <option value=\"1\">One</option>\n                <option value=\"2\">Two </option>\n                <option value=\"3\">Three</option>\n                <option value=\"4\">Four</option>\n              </select>\n\n              <button className=\"btn btn-lg mt-7\">Get Started</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Gameroom from \"./Routes/Gameroom\";\nimport Home from \"./Routes/Home\";\nimport Error from \"./Routes/Error\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/room\" element={<Gameroom />} />\n        <Route path=\"*\" element={<Error msg=\"404 Page Not Found\" />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}